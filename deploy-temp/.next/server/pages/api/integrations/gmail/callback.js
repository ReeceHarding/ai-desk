"use strict";(()=>{var e={};e.id=33,e.ids=[33],e.modules={3939:e=>{e.exports=require("@supabase/supabase-js")},818:e=>{e.exports=require("dotenv")},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3873:e=>{e.exports=require("path")},1428:e=>{e.exports=import("axios")},4691:(e,r,o)=>{o.a(e,async(e,t)=>{try{o.r(r),o.d(r,{config:()=>g,default:()=>c,routeModule:()=>d});var a=o(9947),s=o(2706),n=o(6762),i=o(9366),l=e([i]);i=(l.then?(await l)():l)[0];let c=(0,n.M)(i,"default"),g=(0,n.M)(i,"config"),d=new a.PagesAPIRouteModule({definition:{kind:s.A.PAGES_API,page:"/api/integrations/gmail/callback",pathname:"/api/integrations/gmail/callback",bundlePath:"",filename:""},userland:i});t()}catch(e){t(e)}})},9366:(e,r,o)=>{o.a(e,async(e,t)=>{try{o.r(r),o.d(r,{default:()=>c});var a=o(3939),s=o(1428),n=o(5256),i=o(890),l=e([s]);async function c(e,r){if(console.log("\n=== Gmail Callback Started ==="),console.log("Request details:",{method:e.method,query:e.query,headers:{host:e.headers.host,referer:e.headers.referer,origin:e.headers.origin}}),"GET"!==e.method)return console.log("Method not allowed:",e.method),r.status(405).json({error:"Method not allowed"});try{let{code:o,state:t,error:l,error_description:c}=e.query;if(l)return console.error("OAuth error received:",{error:l,description:c}),r.redirect(`/profile/settings?error=true&message=${encodeURIComponent(c||"OAuth error")}`);if(!o||!t)return console.error("Missing required parameters:",{code:!!o,state:!!t}),r.status(400).json({error:"Missing code or state parameter"});let[g,d]=t.split(":");if(console.log("State parsed:",{type:g,id:d,originalState:t}),!g||!d)return console.error("Invalid state format:",{type:g,id:d,state:t}),r.redirect("/profile/settings?error=true&message=Invalid state parameter");try{console.log("Starting token exchange..."),console.log("Token exchange configuration:",{clientId:"360664812891-fab2isstn9mmq91th22ch4a1p152o2lr.apps.googleusercontent.com",redirectUri:"http://localhost:3000/api/integrations/gmail/callback",hasClientSecret:!!process.env.GMAIL_CLIENT_SECRET});let e=await s.default.post("https://oauth2.googleapis.com/token",{code:o,client_id:"360664812891-fab2isstn9mmq91th22ch4a1p152o2lr.apps.googleusercontent.com",client_secret:process.env.GMAIL_CLIENT_SECRET,redirect_uri:"http://localhost:3000/api/integrations/gmail/callback",grant_type:"authorization_code"});console.log("Token exchange successful:",{hasAccessToken:!!e.data.access_token,hasRefreshToken:!!e.data.refresh_token,expiresIn:e.data.expires_in,tokenType:e.data.token_type});let{access_token:t,refresh_token:l,expires_in:c}=e.data;if(!t||!l)throw console.error("Missing tokens in response:",{hasAccessToken:!!t,hasRefreshToken:!!l,responseData:e.data}),Error("Invalid token response");console.log("Initializing Supabase client..."),console.log("Supabase configuration:",{url:"http://127.0.0.1:54321",hasServiceKey:!!process.env.SUPABASE_SERVICE_ROLE_KEY});let p=(0,a.createClient)("http://127.0.0.1:54321",process.env.SUPABASE_SERVICE_ROLE_KEY,{auth:{persistSession:!1,autoRefreshToken:!1}});if("org"===g){console.log("Updating organization:",d);let{data:e,error:o}=await p.from("organizations").select("name").eq("id",d).single();if(o)throw console.error("Error fetching organization:",o),o;console.log("Found organization:",e?.name);let{data:a,error:s}=await p.from("organizations").update({gmail_access_token:t,gmail_refresh_token:l,updated_at:new Date().toISOString()}).eq("id",d).select("id, name, gmail_refresh_token").single();if(s)throw console.error("Error updating organization:",s),s;console.log("Organization update successful:",{id:a?.id,name:a?.name,hasGmailToken:!!a?.gmail_refresh_token});let n=`/organizations/${d}/settings?success=true`;return console.log("Redirecting to:",n),r.redirect(n)}if("profile"===g){console.log("Updating profile:",d);let{error:e}=await p.from("profiles").update({gmail_access_token:t,gmail_refresh_token:l,updated_at:new Date().toISOString()}).eq("id",d);if(e)throw console.error("Error updating profile:",e),e;console.log("Successfully updated profile with Gmail tokens");try{await (0,n.Fk)(d,{access_token:t,refresh_token:l,token_type:"Bearer",scope:i.T.join(" "),expiry_date:Date.now()+1e3*c}),console.log("Successfully imported initial emails")}catch(e){console.error("Error importing initial emails:",e)}return r.redirect("/profile/settings?success=true")}throw console.error("Invalid state type:",g),Error("Invalid state parameter")}catch(o){console.error("Token exchange/update error:",{error:o.message,response:o.response?.data,stack:o.stack});let e=o.response?.data?.error_description||o.message||"Failed to exchange token";return r.redirect(`/profile/settings?error=true&message=${encodeURIComponent(e)}`)}}catch(o){console.error("Gmail OAuth callback error:",{error:o.message,stack:o.stack});let e=o.message||"Unknown error occurred";return r.redirect(`/profile/settings?error=true&message=${encodeURIComponent(e)}`)}}s=(l.then?(await l)():l)[0],t()}catch(e){t(e)}})},890:(e,r,o)=>{o.d(r,{T:()=>t});let t=["https://www.googleapis.com/auth/gmail.modify","https://www.googleapis.com/auth/gmail.compose","https://www.googleapis.com/auth/gmail.send"]}};var r=require("../../../../webpack-api-runtime.js");r.C(e);var o=e=>r(r.s=e),t=r.X(0,[596],()=>o(4691));module.exports=t})();