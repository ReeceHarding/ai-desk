"use strict";(()=>{var e={};e.id=783,e.ids=[783],e.modules={3939:e=>{e.exports=require("@supabase/supabase-js")},818:e=>{e.exports=require("dotenv")},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3873:e=>{e.exports=require("path")},37:e=>{e.exports=import("uuid")},3959:(e,t,r)=>{r.a(e,async(e,i)=>{try{r.r(t),r.d(t,{config:()=>c,default:()=>l,routeModule:()=>m});var o=r(9947),a=r(2706),s=r(6762),n=r(4456),d=e([n]);n=(d.then?(await d)():d)[0];let l=(0,s.M)(n,"default"),c=(0,s.M)(n,"config"),m=new o.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/integrations/gmail/poll",pathname:"/api/integrations/gmail/poll",bundlePath:"",filename:""},userland:n});i()}catch(e){i(e)}})},4456:(e,t,r)=>{r.a(e,async(e,i)=>{try{r.r(t),r.d(t,{default:()=>d});var o=r(3939),a=r(5256),s=r(9760),n=e([s]);s=(n.then?(await n)():n)[0];let l=(0,o.createClient)("http://127.0.0.1:54321","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0"),c=process.env.CRON_SECRET;async function d(e,t){if("POST"!==e.method)return t.status(405).json({error:"Method not allowed"});let r=e.headers.authorization;if(!r||r!==`Bearer ${c}`)return t.status(401).json({error:"Unauthorized"});try{let{data:e}=await l.from("organizations").select("id, gmail_refresh_token, gmail_access_token").not("gmail_refresh_token","is",null),{data:r}=await l.from("profiles").select("id, org_id, gmail_refresh_token, gmail_access_token").not("gmail_refresh_token","is",null),i=[];if(e)for(let t of e)t.gmail_refresh_token&&t.gmail_access_token&&i.push((0,a.cG)({refresh_token:t.gmail_refresh_token,access_token:t.gmail_access_token,token_type:"Bearer",scope:"https://www.googleapis.com/auth/gmail.modify",expiry_date:0}).then(async e=>{for(let r of e){let e=(0,a.t4)(r);await (0,s.W)(e,t.id)}}).catch(e=>{console.error(`Error processing org ${t.id} mailbox:`,e)}));if(r)for(let e of r)e.gmail_refresh_token&&e.gmail_access_token&&i.push((0,a.cG)({refresh_token:e.gmail_refresh_token,access_token:e.gmail_access_token,token_type:"Bearer",scope:"https://www.googleapis.com/auth/gmail.modify",expiry_date:0}).then(async t=>{for(let r of t){let t=(0,a.t4)(r);await (0,s.W)(t,e.org_id)}}).catch(t=>{console.error(`Error processing profile ${e.id} mailbox:`,t)}));await Promise.all(i),t.status(200).json({status:"ok"})}catch(e){console.error("Error polling Gmail:",e),t.status(500).json({error:String(e)})}}i()}catch(e){i(e)}})},344:(e,t,r)=>{r.d(t,{J:()=>o});let i=(0,require("@supabase/auth-helpers-nextjs").createClientComponentClient)();class o{static async logEmail(e){try{let{data:t,error:r}=await i.from("email_logs").insert({ticket_id:e.ticketId,message_id:e.messageId,thread_id:e.threadId,direction:e.direction,snippet:e.snippet,subject:e.subject,from_address:e.fromAddress,to_address:e.toAddress,author_id:e.authorId,org_id:e.orgId,raw_content:e.rawContent,labels:e.labels||[]}).select().single();if(r)throw console.error("Error logging email:",r),r;return t}catch(e){throw console.error("Error in logEmail:",e),e}}static async getEmailHistory(e){try{let{data:t,error:r}=await i.from("email_logs").select("*").eq("ticket_id",e).order("timestamp",{ascending:!1});if(r)throw console.error("Error fetching email history:",r),r;return t||[]}catch(e){throw console.error("Error in getEmailHistory:",e),e}}static async searchEmails(e){try{let t=i.from("email_logs").select("*");e.ticketId&&(t=t.eq("ticket_id",e.ticketId)),e.threadId&&(t=t.eq("thread_id",e.threadId)),e.messageId&&(t=t.eq("message_id",e.messageId)),e.orgId&&(t=t.eq("org_id",e.orgId)),e.direction&&(t=t.eq("direction",e.direction)),e.fromDate&&(t=t.gte("timestamp",e.fromDate.toISOString())),e.toDate&&(t=t.lte("timestamp",e.toDate.toISOString()));let{data:r,error:o}=await t.order("timestamp",{ascending:!1});if(o)throw console.error("Error searching emails:",o),o;return r||[]}catch(e){throw console.error("Error in searchEmails:",e),e}}static async getLatestThreadEmail(e){try{let{data:t,error:r}=await i.from("email_logs").select("*").eq("thread_id",e).order("timestamp",{ascending:!1}).limit(1).single();if(r&&"PGRST116"!==r.code)throw console.error("Error fetching latest thread email:",r),r;return t}catch(e){throw console.error("Error in getLatestThreadEmail:",e),e}}}},9760:(e,t,r)=>{r.a(e,async(e,i)=>{try{r.d(t,{W:()=>l});var o=r(3939),a=r(37),s=r(818),n=r(344),d=e([a]);a=(d.then?(await d)():d)[0],(0,s.config)();let m="http://127.0.0.1:54321",g="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0";if(!m||!g)throw Error("Missing required environment variables for Supabase connection");let h=(0,o.createClient)(m,g);async function l(e,t){try{console.log(`Processing inbound email: ${e.messageId} for org: ${t}`);let{data:r}=await h.from("tickets").select("id, subject, metadata").eq("org_id",t).filter("metadata->thread_id","eq",e.threadId).limit(1);if(r&&r.length>0){console.log(`Found existing ticket: ${r[0].id} for thread: ${e.threadId}`);let i=r[0].id,{data:o}=await c(e.from,t);if(!o)throw Error("Failed to get or create customer profile");return await h.from("comments").insert({ticket_id:i,author_id:o.id,body:e.body.text||e.body.html||"(No content)",org_id:t,metadata:{message_id:e.messageId,email_date:e.date.toISOString()}}),await n.J.logEmail({ticketId:i,messageId:e.messageId,threadId:e.threadId,direction:"inbound",snippet:e.snippet,subject:e.subject,fromAddress:e.from,toAddress:e.to,authorId:o.id,orgId:t,rawContent:e.body.text||e.body.html,labels:e.labels}),console.log(`Added comment to ticket: ${i}`),{ticketId:i,isNewTicket:!1}}console.log(`No existing ticket found for thread: ${e.threadId}, creating new ticket`);let{data:i}=await c(e.from,t);if(!i)throw Error("Failed to get or create customer profile");let{data:o}=await h.from("tickets").insert({subject:e.subject,description:e.body.text||e.body.html||"(No content)",customer_id:i.id,org_id:t,metadata:{thread_id:e.threadId,message_id:e.messageId,email_date:e.date.toISOString()}}).select().single();if(!o)throw Error("Failed to create ticket");return await n.J.logEmail({ticketId:o.id,messageId:e.messageId,threadId:e.threadId,direction:"inbound",snippet:e.snippet,subject:e.subject,fromAddress:e.from,toAddress:e.to,authorId:i.id,orgId:t,rawContent:e.body.text||e.body.html,labels:e.labels}),console.log(`Created new ticket: ${o.id}`),{ticketId:o.id,isNewTicket:!0}}catch(e){throw console.error("Error handling inbound email:",e),e}}async function c(e,t){let{data:r}=await h.from("profiles").select("*").eq("email",e).eq("org_id",t).limit(1);if(r&&r.length>0)return{data:r[0]};let i=e.split("@")[0],o=(0,a.v4)(),{data:s,error:n}=await h.from("profiles").insert({id:o,email:e,display_name:i,role:"customer",org_id:t,metadata:{source:"email_integration",created_at:new Date().toISOString()}}).select().single();if(n)throw console.error("Error creating customer profile:",n),n;return{data:s}}i()}catch(e){i(e)}})}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),i=t.X(0,[596],()=>r(3959));module.exports=i})();